# getClassesTopAll
#
# this version does not include anonymous classes in order
# to prevent the anonymous classes that get generated by
# OWLIM even for an empty repository to appear.
# To include the anonymous classes, comment out the 
# lines between ANONBEG and ANONEND

PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
SELECT distinct ?cl WHERE {
  { 
    { {?cl a owl:Class} UNION {?cl a rdfs:Class }}
    OPTIONAL {
      ?cl rdfs:subClassOf ?sc .
      ?sc a owl:Class .
      OPTIONAL {
        ?sc rdfs:subClassOf ?dc .
        ?dc rdfs:subClassOf ?cl .
        filter (?sc != ?dc)
      }
      filter(?cl != ?sc && ?sc != owl:Thing && !bound(?dc))
    }
    filter (!bound(?sc) && isURI(?cl) &&
      !regex(str(?cl), "^http://www.w3.org/2002/07/owl") &&
      !regex(str(?cl), "^http://www.w3.org/2000/01/rdf-schema") &&
      !regex(str(?cl), "^http://www.w3.org/2001/XMLSchema") &&
      !regex(str(?cl), "^http://www.w3.org/1999/02/22-rdf-syntax-ns") 
    )
  } UNION {
    { { {?cl a owl:Class} UNION {?cl a rdfs:Class }}
      OPTIONAL {
        ?cl rdfs:subClassOf ?sc .
        ?sc a owl:Class .
        OPTIONAL {
          ?sc rdfs:subClassOf ?dc .
          ?dc rdfs:subClassOf ?cl .
          filter (?sc != ?dc)
        }
        filter(?cl != ?sc && ?sc != owl:Thing && !bound(?dc))
      }
      filter (!bound(?sc) && !isURI(?cl))
    }
    # ANONBEG
    ?cl ?r ?x .
    FILTER ( ?cl != ?x && 
      (?r = owl:allValuesFrom ||
       ?r = owl:oneOf ||
       ?r = owl:hasValue ||
       ?r = owl:maxCardinality ||
       ?r = owl:minCardinality ||
       ?r = owl:cardinality ||
       #?r = owl:unionOf ||
       #?r = owl:intersectionOf ||
       #?r = owl:complementOf ||
       ?r = owl:someValuesFrom )
    )
    # ANONEND
  }
}
