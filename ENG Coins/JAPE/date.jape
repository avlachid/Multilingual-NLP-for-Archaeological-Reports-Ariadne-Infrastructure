/*
Andreas Vlachidis 2016
Numerical date eg AD 1453

*/

Phase: DateMatching
Input: Lookup Token
Options: control = appelt


Rule: adbcDateToadbcDate
Priority: 110
({Token.category == "IN"})?
(
  (
   {Lookup.majorType == adbc}
   {Token.kind == number}
  )
  (
   {Token.kind == punctuation}
   {Token.kind == number}
  )?
  ({Token.string == "to"})
  (
   {Lookup.majorType == adbc}
   {Token.kind == number}
  )
  (
   {Token.kind == punctuation}
   {Token.kind == number}
  )?
)
:match
-->
:match.Time_Appellation = {rule = "adbcDateToadbcDate"}


Rule: adbcDate
Priority: 100
({Token.category == "IN"})?
(
  (
   {Lookup.majorType == adbc}
   {Token.kind == number}
  )
  (
   {Token.kind == punctuation}
   {Token.kind == number}
  )?
)
:match
-->
:match.Time_Appellation = {rule = "adbcDate"}

Rule: inDate
Priority: 90

  ({Token.string == "in"}|{Token.string == "by"})
  (({Lookup.majorType == adbc})?
   {Token.kind == number, Token.length == "4"}
  ):match
  
-->
:match.Time_Appellation = {rule = "inDate"}

Rule: inDateII
Priority: 90

  ({Token.string == "in"}|{Token.string == "by"})
  ( {Lookup.majorType == adbc}
    ({Token.kind == number, Token.length == "3"}|
     {Token.kind == number, Token.length == "2"}|
     {Token.kind == number, Token.length == "1"}
   )
  ):match
  
-->
:match.Time_Appellation = {rule = "inDateII"}
Rule: inDateIII
Priority: 90

  ({Token.string == "in"}|{Token.string == "by"})
  (
   ({Token.kind == number, Token.length == "3"}|
    {Token.kind == number, Token.length == "2"}|
    {Token.kind == number, Token.length == "1"}
   )
   {Lookup.majorType == adbc}
  ):match
  
-->
:match.Time_Appellation = {rule = "inDateIII"}



Rule: ordinalCentury
Priority: 80
(
  (
   {Lookup.majorType == ordinal}|
   (
     {Token.kind == number}
     {Lookup.majorType == ordinal_suffix}
   )
  )
  {Token.string ==~ "[Cc]entury"}
  ({Lookup.majorType == adbc})?
):match
  
-->
:match.Time_Appellation = {rule = "ordinalCentury"}




Rule: dateAdbc
Priority: 75
(
   {Token.kind == number}
   (
   {Token.kind == punctuation}
   {Token.kind == number}
   )?
   {Lookup.majorType == adbc} 
)
:match
-->
:match.Time_Appellation = {rule = "dateAdbc"}

